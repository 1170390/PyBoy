language: bash # Randomly fixes Windows not booting

secure: "G53Jjc4bud/Y3wkZq9XtYURHUhESXssO+IN0jVDQgVxmj0gCgPxAWzFrYoxmBFDyjTyn1IlrJlIHXo7UijuSeXz/I5JJJfy2CUWqMZA4wo0ZneBFXQlyHcW3wfHVSgjO+Dl80ucfkdL0a6NY1cqMTlzxBIGo0X0kkXkG/Yn6DhaIy/3DM5psgGw7ExhsAjNxWb2X7+5fjfgGHwjHxNgHrm7NLS1WggQAHbF14foYvx179oFbBi0gu0QkYMp84uUrq8cCnUxpVyp97HBXyTb20PGoq7sSNGuKThbjUrglOhwuKLavyQWpaX/hEcpwi+XSmxNCejWIT24CvUbSDtEF6ckIX4h3z0ijSwPqitKPDZdc7B91h8xaKbRkhUoAI6mnuE9JBlCuppEUT9dxQNO02v9Q5PSEypUVZ5+q7iYebq0MpnREgVi9OkFPIhLOoKCadlKB8eIBHLP96UIKklKd2j9G38aN7bC/zg9tDTpS+hj3vn1VUgfdNFMcNsDz8/4rh/89SqpdmQFsppZB0zXw0QGNZB0u39WdNlXF+wMavw9dOp6/an8est4THJlQXYWmCAUBvyqInYGKWAAJeoqaZIRhOxN3bqDiY09CfzgDHNmwRyvVqmYSOygt+Sj6aMJuA/qIQT0zED7VZOdc2iVzAF+Li4aVUvxVuzvFcSEywYg="

matrix:
  include:
    - os: linux
      dist: bionic
    - os: linux
      dist: bionic
      env: PYPY_TESTING=1 pypy_version=pypy3.6-v7.3.0-linux64
    - os: osx
      osx_image: xcode11.3
    - os: osx
      osx_image: xcode11.3
      env: PYPY_TESTING=1
    - os: windows
      env: MSYS=1
    - os: windows

compiler:
  - gcc
  - clang

addons:
  apt:
    packages:
      # Python and PyPy
      - libsdl2-dev
      - build-essential
      # Python
      - python3
      - python3-pip
      - python3-dev
      - python3-setuptools
      # PyPy
      - libtiff5-dev
      - libjpeg8-dev
      - zlib1g-dev
      - curl

before_install:
  - |-
    case $TRAVIS_OS_NAME in
      osx)
        openssl aes-256-cbc -K $encrypted_e987e62fd955_key -iv $encrypted_e987e62fd955_iv -in ci_secrets.tar.enc -out ci_secrets.tar -d
        tar xf ci_secrets.tar
        # MacOS Python and PyPy
        brew update
        brew install sdl2
        python3 -m pip install -U --force-reinstall pip
        # MacOS PyPy
        if [ "$PYPY_TESTING" = "1" ]; then brew install pypy3 zlib; fi
        if [ "$PYPY_TESTING" = "1" ]; then export PKG_CONFIG_PATH="/usr/local/opt/zlib/lib/pkgconfig"; fi
        if [ "$PYPY_TESTING" = "1" ]; then pypy3 -m pip install wheel; fi
      ;;
      linux)
        openssl aes-256-cbc -K $encrypted_e987e62fd955_key -iv $encrypted_e987e62fd955_iv -in ci_secrets.tar.enc -out ci_secrets.tar -d
        tar xf ci_secrets.tar
        # Linux PyPy
        if [ "$PYPY_TESTING" = "1" ]; then curl -OL "https://bitbucket.org/pypy/pypy/downloads/$pypy_version.tar.bz2"; fi
        if [ "$PYPY_TESTING" = "1" ]; then tar -xvf "${pypy_version}.tar.bz2" -C $HOME/; fi
        if [ "$PYPY_TESTING" = "1" ]; then export PATH=$HOME/$pypy_version/bin:$PATH; fi
        if [ "$PYPY_TESTING" = "1" ]; then pypy3 -m ensurepip; fi
        if [ "$PYPY_TESTING" = "1" ]; then pypy3 -m pip install --upgrade pip; fi
        if [ "$PYPY_TESTING" = "1" ]; then pypy3 -m pip install cython; fi # Needed for building NumPy, but only on Travis
        if [ "$PYPY_TESTING" = "1" ]; then pypy3 -m pip install wheel; fi
      ;;
      windows)
        $mingw64 openssl aes-256-cbc -K $encrypted_e987e62fd955_key -iv $encrypted_e987e62fd955_iv -in ci_secrets.tar.enc -out ci_secrets.tar -d
        $mingw64 tar xf ci_secrets.tar
        case $MSYS in
          1)
            [[ ! -f C:/tools/msys64/msys2_shell.cmd ]] && rm -rf C:/tools/msys64
            choco uninstall -y mingw
            choco upgrade --no-progress -y msys2
            export msys2='cmd //C RefreshEnv.cmd '
            export msys2+='& set MSYS=winsymlinks:nativestrict '
            export msys2+='& C:\\tools\\msys64\\msys2_shell.cmd -defterm -no-start'
            export mingw64="$msys2 -mingw64 -full-path -here -c "\"\$@"\" --"
            export msys2+=" -msys2 -c "\"\$@"\" --"
            $msys2 pacman --sync --noconfirm --needed mingw-w64-x86_64-toolchain
            ## Install more MSYS2 packages from https://packages.msys2.org/base here
            taskkill //IM gpg-agent.exe //F  # https://travis-ci.community/t/4967
            export PATH=/C/tools/msys64/mingw64/bin:$PATH
            export MAKE=mingw32-make  # so that Autotools can find it
            $mingw64 pacman -S --noconfirm make mingw-w64-x86_64-gcc mingw-w64-x86_64-SDL2 mingw-w64-x86_64-python3 mingw-w64-x86_64-python3-pip mingw-w64-x86_64-python3-numpy mingw-w64-x86_64-python3-pillow git
          ;;
          *)
            powershell -Command "(New-Object Net.WebClient).DownloadFile('https://www.python.org/ftp/python/3.7.6/python-3.7.6-amd64.exe', 'python-3.7.6-amd64.exe')"
            powershell -Command "start-Process -FilePath python-3.7.6-amd64.exe -ArgumentList '/quiet','InstallAllUsers=1','PrependPath=1' -wait"
            powershell -Command "(New-Object Net.WebClient).DownloadFile('https://www.libsdl.org/release/SDL2-devel-2.0.10-VC.zip', 'SDL2-devel-2.0.10-VC.zip')"
            powershell -Command "Expand-Archive -Force 'SDL2-devel-2.0.10-VC.zip' C:\\SDL2\\"
            powershell -Command "setx PYSDL2_DLL_PATH C:\\SDL2\\SDL2-2.0.10\\lib\\x64"
            powershell -Command "setx PATH \"%PATH%;C:\\SDL2\\SDL2-2.0.10\\lib\\x64\""
          ;;
        esac
      ;;
    esac

# before_cache:
#   - |-
#     case $TRAVIS_OS_NAME in
#       windows)
#         # https://unix.stackexchange.com/a/137322/107554
#         $mingw64 pacman --sync --clean --noconfirm
#         ;;
#     esac

# cache:
#   directories:
#   - $HOME/AppData/Local/Temp/chocolatey
#   - /C/tools/msys64

install:
  - |-
    case $TRAVIS_OS_NAME in
      windows)
        case $MSYS in
          1)
            $mingw64 make build
          ;;
          *)
            # The paths are weird, because we are actually running in Git Bash. Windwows support is still a little beta
            export PYSDL2_DLL_PATH=/c/SDL2/SDL2-2.0.10/lib/x64
            export PATH="${PATH}:/c/SDL2/SDL2-2.0.10/lib/x64"
            /c/Program\ Files/Python37/python.exe setup.py build_ext --inplace
          ;;
        esac
      ;;
      *)
        if [ "$PYPY_TESTING" = "" ]; then make build; fi
      ;;
    esac

script:
  - |-
    case $TRAVIS_OS_NAME in
      windows)
        case $MSYS in
          1)
            if [ "$PYPY_TESTING" = "" ]; then TEST_CI=1 TEST_NO_UI=1 $mingw64 make test_cython; fi
            if [ "$PYPY_TESTING" = "1" ]; then TEST_CI=1 TEST_NO_UI=1 $mingw64 make test_pypy; fi
          ;;
          *)
            PYSDL2_DLL_PATH=/c/SDL2/SDL2-2.0.10/lib/x64 PATH="${PATH};/c/SDL2/SDL2-2.0.10/lib/x64" TEST_CI=1 TEST_NO_UI=1 /c/Program\ Files/Python37/python.exe setup.py test
          ;;
        esac
      ;;
      *)
        if [ "$PYPY_TESTING" = "" ]; then TEST_CI=1 TEST_NO_UI=1 make test_cython; fi
        if [ "$PYPY_TESTING" = "1" ]; then TEST_CI=1 TEST_NO_UI=1 make test_pypy; fi
      ;;
    esac

deploy:
  - provider: script
    skip_cleanup: true
    script: bash .deploy.sh
    on:
      branch: plugin_refactor
      condition: $PYPY_TESTING = ""
